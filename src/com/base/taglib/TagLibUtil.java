package com.base.taglib;import java.util.Map;import javax.servlet.ServletRequest;import org.springframework.web.context.WebApplicationContext;import project.jun.dao.HoDaoImpl;import project.jun.dao.parameter.HoQueryParameterMap;import project.jun.dao.result.HoList;import project.jun.dao.result.HoMap;import project.jun.was.parameter.HoParameter;import project.jun.was.parameter.HoRequest;import project.jun.was.spring.HoModel;public class TagLibUtil {	private HoModel      model = null;	public HoDaoImpl getHoDaoImpl(WebApplicationContext ctx) {		return (HoDaoImpl)ctx.getBean("proxyProjectDao");	}	public HoDaoImpl getHoDaoImpl(WebApplicationContext ctx, String dataSource) {		return (HoDaoImpl)ctx.getBean(dataSource);	}			public void setHoModel(ServletRequest request){		if( model == null ) {			model =  new HoModel(request);		}	}		public HoModel getHoModel(){		return model;	}		public HoList getList(WebApplicationContext ctx, String code, HoRequest hoRequest, HoParameter hoParameter, String first, Map options) {		HoDaoImpl dao = getHoDaoImpl(ctx);		setHoModel(hoRequest.getRequest());		Map displayMap = hoParameter.getHoConfig().getDisplayFormat();		displayMap.put("YMD", hoParameter.getDefaut("DateFormat"));				this.model.setDisplayFormat(displayMap);		HoQueryParameterMap value = new HoQueryParameterMap();		// 세션정보를 담는다.		value.putAll(hoRequest.getSessionMap());				value.putAll(options);		// 첫번째가.. 선택일 경우.		if( first.equals("choice") ) {			value.put("CODE_GBN", "W1902");		}		else if( first.equals("none") ) {			// 처리없음		}		// 전체일 경우.		else {			value.put("CODE_GBN", "W1901");		}		HoList list = null;		try {			list = (HoList) getHoModel().get("TabLibSelect."+code.toUpperCase());						if( list==null ) {				value.put("GROUP_CODE", code);								list = dao.queryForList("CommonCombo.selectSearchCodeListCombo", value);								getHoModel().put("TabLibSelect."+code.toUpperCase(), list);			} 			Map map = hoParameter.getHoConfig().getDisplayFormat();			map.put("YMD", hoParameter.getDefaut("DateFormat"));			list.setDisplayFormat( map );		} catch(Exception e) {			e.printStackTrace();		}				return list;	}			public HoMap getInfo(WebApplicationContext ctx, String name, HoRequest hoRequest, HoParameter hoParameter) {		HoDaoImpl dao = getHoDaoImpl(ctx);				setHoModel(hoRequest.getRequest());		Map displayMap = hoParameter.getHoConfig().getDisplayFormat();		displayMap.put("YMD", hoParameter.getDefaut("DateFormat"));				this.model.setDisplayFormat(displayMap);		HoQueryParameterMap value = new HoQueryParameterMap();		value.put("CODE_GBN", "W1902");		HoMap info = null;				try {			info = (HoMap) getHoModel().get("TabLibInputSearch."+name.toUpperCase());								if( info == null ) {				value.put("NAME", name.toLowerCase());				info = dao.queryForInfo("CommonCombo.selectSearchInput", value);								getHoModel().put("TabLibInputSearch."+name.toUpperCase(), info);			}						Map map = hoParameter.getHoConfig().getDisplayFormat();			map.put("YMD", hoParameter.getDefaut("DateFormat"));			info.setDisplayFormat( map );		} catch(Exception e) {			e.printStackTrace();		}				return info;			}	}