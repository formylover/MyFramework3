--- 테이블 정보 INSERTDROP TABLE S_TABLE_INFO;CREATE TABLE S_TABLE_INFO(  OWNER           VARCHAR2(30 BYTE)               NOT NULL,  TABLE_NAME      VARCHAR2(30 BYTE)               NOT NULL,  TABLE_TYPE      VARCHAR2(20 BYTE),  TABLE_COMMENTS  VARCHAR2(4000 BYTE))TABLESPACE TS_GLMS2_DATA -- SCP_DATPCTUSED    0PCTFREE    10INITRANS   1MAXTRANS   255STORAGE    (            INITIAL          64K            MINEXTENTS       1            MAXEXTENTS       UNLIMITED            PCTINCREASE      0            BUFFER_POOL      DEFAULT           )LOGGINGNOCOMPRESSNOCACHENOPARALLELMONITORING;  --  테이블정보 등록..  INSERT INTO S_TABLE_INFO ( OWNER          ,                           TABLE_NAME     ,                           TABLE_TYPE     ,                           TABLE_COMMENTS   )SELECT OWNER, TABLE_NAME, TABLE_TYPE, COMMENTS  FROM ALL_TAB_COMMENTS WHERE  OWNER IN ( 'GLMS2') ;COMMIT;--- 컬럼 정보 INSERT    DROP TABLE S_COLUMN_INFO;CREATE TABLE S_COLUMN_INFO(  OWNER          VARCHAR2(30 BYTE)               NOT NULL,  TABLE_NAME     VARCHAR2(30 BYTE)               NOT NULL,  COLUMN_NAME    VARCHAR2(30 BYTE)               NOT NULL,  COLUMN_ID      NUMBER(3) ,  COLUMN_TITLE   VARCHAR2(50 BYTE),  DATA_LENGTH    VARCHAR2(20 BYTE),  MIN_VALUE      NUMBER,  MAX_VALUE      NUMBER,  DATA_TYPE      VARCHAR2(20 BYTE),  PK_IDX         VARCHAR2(2 BYTE),  NOTNULL_YN     VARCHAR2(1 BYTE),  CODE           VARCHAR2(20 BYTE),  CODE_COLUMN    VARCHAR2(20 BYTE),  DATA_DEFAULT   VARCHAR2(20 BYTE),  REGI_DT       DATE                            DEFAULT SYSDATE,  REGI_NO       VARCHAR2(50 BYTE))TABLESPACE SCP_DATPCTUSED    0PCTFREE    10INITRANS   1MAXTRANS   255STORAGE    (            INITIAL          64K            MINEXTENTS       1            MAXEXTENTS       UNLIMITED            PCTINCREASE      0            BUFFER_POOL      DEFAULT           )LOGGINGNOCOMPRESSNOCACHENOPARALLELMONITORING;CREATE UNIQUE INDEX S_COLUMN_INFO_PK ON S_COLUMN_INFO(OWNER, TABLE_NAME, COLUMN_NAME)LOGGINGTABLESPACE SCP_IDXPCTFREE    10INITRANS   2MAXTRANS   255STORAGE    (            INITIAL          64K            MINEXTENTS       1            MAXEXTENTS       UNLIMITED            PCTINCREASE      0            BUFFER_POOL      DEFAULT           )NOPARALLEL;ALTER TABLE S_COLUMN_INFO ADD (  CONSTRAINT S_COLUMN_INFO_PK PRIMARY KEY (OWNER, TABLE_NAME, COLUMN_NAME)    USING INDEX    TABLESPACE SCP_IDX    PCTFREE    10    INITRANS   2    MAXTRANS   255    STORAGE    (                INITIAL          64K                MINEXTENTS       1                MAXEXTENTS       UNLIMITED                PCTINCREASE      0               ));               -- 제약조건..               SELECT Y.COLUMN_NAME, X.CONSTRAINT_TYPE, X.SEARCH_CONDITION  FROM ALL_CONSTRAINTS X, ALL_CONS_COLUMNS Y WHERE X.OWNER           = Y.OWNER   AND X.TABLE_NAME      = Y.TABLE_NAME   AND X.CONSTRAINT_NAME = Y.CONSTRAINT_NAME   AND Y.OWNER           = 'SCPPKG'   AND Y.TABLE_NAME      = #TABLE_NAME#               --  컬럼정보 등록..             INSERT INTO S_COLUMN_INFO ( OWNER        ,                            TABLE_NAME   ,                            COLUMN_NAME  ,                            COLUMN_ID ,                            COLUMN_TITLE ,                            DATA_TYPE    ,                            DATA_LENGTH  ,                            PK_IDX       ,                            NOTNULL_YN   ,                            CODE         ,                            CODE_COLUMN  ,                            DATA_DEFAULT ,                            MIN_VALUE    ,                            MAX_VALUE    ,                            REGI_DT      ,                            REGI_NO      )SELECT OWNER, TABLE_NAME,       COLUMN_NAME, COLUMN_ID, COMMENTS,       DATA_TYPE, DATA_LENGTH,       IDX_POSITION, DATA_NULL, DECODE(SIGN(INSTR(COMMENTS, 'CODE:')), 1, SUBSTR( COMMENTS, INSTR(COMMENTS, 'CODE:')+5, INSTR(COMMENTS, ')') - INSTR(COMMENTS, 'CODE:') -5 ) ) CODE,       DECODE(SIGN(INSTR(COMMENTS, 'CODE:')), 1, SUBSTR( SUBSTR( COMMENTS, INSTR(COMMENTS, 'CODE:')+5), INSTR(SUBSTR( COMMENTS, INSTR(COMMENTS, 'CODE:')+5), ')')+2) ) CODE_COLUMN,       -- TODO       null DATA_DEFAULT, null MIN_VALUE, null MAX_VALUE,        SYSDATE, NULL  FROM (SELECT A.OWNER, B.TABLE_NAME, (SELECT COMMENTS FROM ALL_TAB_COMMENTS WHERE OWNER = A.OWNER AND TABLE_NAME = B.TABLE_NAME ) TABLE_COMMENTS,       B.COLUMN_ID, A.COLUMN_NAME, A.COMMENTS, B.DATA_TYPE,  REPLACE(TRANSLATE(INITCAP(B.TABLE_NAME), B.TABLE_NAME||'abcdefghijklmnopqrstuvwxyz',B.TABLE_NAME),'_','') TABLE_AS,       ( SELECT MAX(LENGTH(COLUMN_NAME)) FROM ALL_COL_COMMENTS WHERE OWNER       = A.OWNER            AND TABLE_NAME  = A.TABLE_NAME  ) LENGTH,       DECODE(B.DATA_TYPE,'DATE','', NVL(DATA_PRECISION,'')||       		NVL(CHAR_COL_DECL_LENGTH,'') ) ||       		DECODE(NVL(DATA_SCALE,'0'),'0','',','       		||DATA_SCALE) DATA_LENGTH,		DECODE(B.NULLABLE,'N','Y', '') DATA_NULL,		( SELECT Y.POSITION          FROM ALL_CONSTRAINTS X, ALL_CONS_COLUMNS Y         WHERE X.OWNER=B.OWNER			AND X.TABLE_NAME=B.TABLE_NAME			AND X.CONSTRAINT_TYPE = 'P'			AND X.CONSTRAINT_NAME = Y.CONSTRAINT_NAME			AND Y.OWNER = B.OWNER			AND Y.TABLE_NAME = B.TABLE_NAME			AND Y.COLUMN_NAME = B.COLUMN_NAME ) IDX_POSITION, B.DATA_DEFAULT FROM  ALL_COL_COMMENTS A,    ALL_TAB_COLUMNS B WHERE A.OWNER       = B.OWNER   AND A.TABLE_NAME  = B.TABLE_NAME   AND A.OWNER       = 'SCPPKG'   AND B.TABLE_NAME  LIKE 'HR_COURSE%'   AND A.COLUMN_NAME =  B.COLUMN_NAME ORDER BY B.TABLE_NAME, B.COLUMN_ID ) AA                                            ;                                                                                        CREATE OR REPLACE FUNCTION F_CONSTRAINT_STRING( in_gbn varchar2,in_owner_name varchar,in_table_name varchar,in_column_name varchar2)RETURN varchar2 AStext_c1 varchar2(32767);begin  SELECT X.SEARCH_CONDITION    into text_c1  FROM ALL_CONSTRAINTS X, ALL_CONS_COLUMNS Y WHERE X.OWNER           = Y.OWNER   AND X.TABLE_NAME      = Y.TABLE_NAME   AND X.CONSTRAINT_NAME = Y.CONSTRAINT_NAME   AND Y.OWNER           = in_owner_name   AND Y.TABLE_NAME      = in_table_name   AND Y.COLUMN_NAME     = in_column_name   AND X.CONSTRAINT_TYPE <> 'P' ;  text_c1 := substr(text_c1, 1, 4000);  RETURN TEXT_C1;END;CREATE OR REPLACE VIEW HO_V_SELECT AS SELECT COMPANY_CD,CODE ,CODE_NM ,UPCD , ORDER_NO ,USE_YN      ,USEDEF1 ,USEDEF2 ,USEDEF3 ,USEDEF4 ,USEDEF5  FROM CODET ;    CREATE OR REPLACE VIEW HO_V_INPUT_SEARCHASSELECT '강의계획서명' TEXT, 'text' TYPE, 'lecplan_name' NAME, 'HRD_PAGE_1075' TITLE_CODE, NULL ALLOW_CHARS  FROM DUALUNION ALLSELECT '메일제목' TEXT, 'text' TYPE, 'mail' NAME, 'HRD_PAGE_1083' TITLE_CODE, NULL ALLOW_CHARS  FROM DUALUNION ALLSELECT '회원명' TEXT, 'text' TYPE, 'member_nm' NAME, 'HRD_PAGE_1083' TITLE_CODE, NULL ALLOW_CHARS  FROM DUALUNION ALLSELECT '강의계획서' TEXT, 'text' TYPE, 'lecturer' NAME, 'HRD_PAGE_108' TITLE_CODE, NULL ALLOW_CHARS  FROM DUAL  UNION ALLSELECT '입사일자' TEXT, 'date' TYPE, 'enter' NAME, 'HRD_PAGE_108' TITLE_CODE, NULL ALLOW_CHARS  FROM DUAL  UNION ALLSELECT '두번째날짜' TEXT, 'date' TYPE, 'new2' NAME, 'HRD_PAGE_108' TITLE_CODE, NULL ALLOW_CHARS  FROM DUAL  ;