package project.jun.was.view;import java.io.UnsupportedEncodingException;import java.util.Map;import javax.servlet.ServletContext;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.apache.poi.hssf.usermodel.HSSFWorkbook;import org.springframework.web.context.WebApplicationContext;import org.springframework.web.context.support.WebApplicationContextUtils;import org.springframework.web.servlet.FrameworkServlet;import org.springframework.web.servlet.view.document.AbstractExcelView;import project.jun.util.HoExcelWriter;import project.jun.was.config.HoConfig;import project.jun.was.parameter.HoParameter;import project.jun.was.parameter.HoRequest;import project.jun.was.spring.HoController;public class HoExcelView extends AbstractExcelView {	public static final String HO_EXCEL_DATA  = "project.jun.was.spring.HoExcelView.EXCEL_DATA";	/**	 * Excel 다운로드 필수구현 method	 */	protected void buildExcelDocument(Map map, HSSFWorkbook wb, HttpServletRequest request, HttpServletResponse response) throws Exception {    	HoRequest hoRequest = new HoRequest( request, response );    	HoParameter param = (HoParameter) map.get(HoController.HO_PARAMETER);		    	HoExcelWriter hew = new HoExcelWriter();    	hew.setWorkbook(wb);    	ServletContext ctx =  hoRequest.getSession().getServletContext();		WebApplicationContext factory = null;		try {			String attr = FrameworkServlet.SERVLET_CONTEXT_PREFIX + "action"; 			factory = WebApplicationContextUtils.getWebApplicationContext(ctx, attr);					} catch (Exception e) {					}    	makeExcel(param.get(((HoConfig) factory.getBean("config")).getActionFlag(), "p_action_flag"), param, map, hew, factory);			}			/**	 * 개발자가 실제로 구현해야하는  method	 * @param actionFlag	 * @param param	 * @param map	 * @param hew	 * @throws Exception	 */	public void makeExcel(String actionFlag, HoParameter param, Map map, HoExcelWriter hew ,WebApplicationContext factory) throws Exception  {			}	/**	 * Excel다운로드시 헤더정보	 * @param header	 * @param value	 * @param res	 */	private void setDBCSHeader(String header,String value, HttpServletResponse res) {  		byte b[];  		try {     		b = value.getBytes(res.getCharacterEncoding());  		} catch (Exception ex) {     		b = value.getBytes();  		}  		char c[] = new char[b.length];  		for (int i=0;i<b.length;i++)  		{  		    c[i]=(char)(((char)b[i])&0xff);       	}  		res.setHeader(header,new String(c));  		res.setHeader("Content-Transfer-Encoding", "binary");	}	/**	 * Excel다운로드시 파일명 설정.	 * @param header	 * @param value	 * @param res	 */	protected void setExcelName(HoRequest hoRequest, String fileName) throws UnsupportedEncodingException {		/*		String strClient = hoRequest.getRequest().getHeader("User-Agent");		String sNewViewname = java.net.URLEncoder.encode(fileName, "utf-8"); //euc-kr		if (strClient.indexOf("MSIE 5.5") != -1) {			setDBCSHeader("Content-Disposition", "filename="+sNewViewname+".xls;", hoRequest.getResponse());		} else {			setDBCSHeader("Content-Disposition", "attachment;filename="+sNewViewname+".xls;", hoRequest.getResponse());		}		*/				String sNewViewname = new String(fileName.getBytes("euc-kr"), "8859_1"); 		hoRequest.getResponse().setHeader("Content-Disposition", "attachment; fileName=\"" + sNewViewname + "\";"); 		hoRequest.getResponse().setHeader("Content-Transfer-Encoding", "binary");						}}