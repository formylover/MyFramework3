package project.jun.util;import java.io.File;import java.io.FileInputStream;import java.io.FileOutputStream;import java.nio.channels.FileChannel;import java.util.ArrayList;import java.util.List;import java.io.IOException;public class HoFileManager {		private static HoFileManager hfm = null;		public HoFileManager() {	}		public static HoFileManager getInstance() {		if( hfm == null) {			hfm = new HoFileManager();		}				return hfm;	}	/**  * source에서 target으로의 파일 복사  	* @param source 복사할 파일명을 포함한 절대 경로   	* @param target 복사될 파일명을 포함한 절대경로  */ 	public void copy(String source, String target) {  //복사 대상이 되는 파일 생성   				File sourceFile = new File( source ); //스트림, 채널 선언  				FileInputStream inputStream = null;  		FileOutputStream outputStream = null;  				FileChannel fcin = null;  		FileChannel fcout = null; 				try {   //스트림 생성   			inputStream = new FileInputStream(sourceFile);   			outputStream = new FileOutputStream(target);   //채널 생성   						fcin = inputStream.getChannel();   			fcout = outputStream.getChannel();      //채널을 통한 스트림 전송   						long size = fcin.size();   			fcin.transferTo(0, size, fcout); 					} catch (Exception e) {   			e.printStackTrace();  		} finally {   //자원 해제   			try{    fcout.close();   }catch(IOException ioe){}   			try{    fcin.close();   }catch(IOException ioe){}   			try{    outputStream.close();   }catch(IOException ioe){}   			try{    inputStream.close();   }catch(IOException ioe){}  		} 	}		/**	 * dir경로에 해당하는 파일목록을  조회한다.	 * @param dir	 * @return	 */	public List getFileList(String dir) {		return getFileList(dir, false);	}		/**	 * dir경로 및 하위dir에 해당하는 파일 목록을 조회한다.	 * @param dir	 * @param includeSubDir	 * @return	 */	public List getFileList(String dir, boolean includeSubDir) {		List list = new ArrayList();				File sourceDir = new File( dir ); //스트림, 채널 선언  				if( sourceDir.exists() ) {            File[] fileList = sourceDir.listFiles();                        for( int i=0 ; i<fileList.length ; i++ ) {        		list.add(fileList[i]);            	if( includeSubDir && fileList[i].isDirectory() ) {            		list.addAll(getFileList(fileList[i].getAbsolutePath(), includeSubDir));            	}             }		} 				return list;	}				public static void main(String [] args) {		HoFileManager fm = HoFileManager.getInstance();				List list = fm.getFileList("D:/ProjectSource/jkd5/MyFramework/src/project/jun", true);				File file = null;		for( int i=0 ; i<list.size(); i++ ) {			file = (File) list.get(i);			System.out.println( file.getName() );		}	}	}