<%@ page language="java" contentType="text/html;  charset=utf-8" pageEncoding="utf-8" session="true"%><%@ page	import="project.jun.dao.result.HoList"%><%@include file="/jsp/common/include/include.jsp"%><%@ taglib uri="/WEB-INF/tld/wiz.tld"         prefix="wiz" %><%	HoList list = model.getHoList("list");%>        var searchform = new Ext.form.FormPanel({        	unstyled: true,            autoHeight: true,            renderTo : 'search',            name : 'formSearch',            width   : 1000,            bodyStyle: 'margin : 5 0 0 5;padding: 0px;',	        submit: function() {        		if (searchform.form.isValid()) { // == this.getForm().isValid()	                this.getForm().getEl().dom.action = '/itinAdminWebApp/system/dataBase.do';	                this.getForm().getEl().dom.submit();        		}	                },            items   : [{xtype : 'fieldset',                		width : 990,                        collapsible: true,                        title: '검색 조건',                		items : [<wiz:search type="hidden_p_action_flag" defaultValue="r_list"></wiz:search>                				<wiz:search type="text_mail" notNull="Y"></wiz:search>                				<wiz:search type="text_lecturer"></wiz:search>                				<wiz:search type="text_member_name"></wiz:search>                				<wiz:search type="date_new" titleText="Date Range"></wiz:search>                				<wiz:search type="date_new2" titleText="Date Range2"></wiz:search>                				]} ] }                						                        ]		               }],             buttons: [{ text : 'Search',                 		handler : function() {		                 	//if ( !searchform.form.isValid()) { 		                 		for( var i=0 ; i<searchform.form.items.length ; i++ ) {									// alert( searchform.form.items.itemAt(i).getXType() + ":" +searchform.form.items.itemAt(i).getName() + ":" + searchform.form.items.itemAt(i).getValue());																		if( searchform.form.items.itemAt(i).getXType() == 'compositefield' ) {										for( var j=0 ; j<searchform.form.items.itemAt(i).items.length ; j++ ) { 											//alert( searchform.form.items.itemAt(i).items.itemAt(j).getXType() + ":" +searchform.form.items.itemAt(i).items.itemAt(j).getName() + ":" + searchform.form.items.itemAt(i).items.itemAt(j).getValue());											if(!searchform.form.items.itemAt(i).items.itemAt(j).isValid()) {												Ext.get(searchform.form.items.itemAt(i).items.itemAt(j).getId()).frame("ff0000", 2, { duration: 0.7 }); 											}										}									}		                 		}		                 	//}  		                 			                 	searchform.submit();		                 }		               }, 		               {text : 'Down Load',		                 handler : function() {alert('Down Load');}		               }		             ]         });        // create the Data Store        var store = new Ext.data.JsonStore({            root: 'topics',            totalProperty: 'totalCount',            idProperty: 'threadid',            remoteSort: true,            fields: [<%= list.getMetaDataString() %>,                                     'title', 'forumtitle', 'forumid', 'author',                {name: 'replycount', type: 'int'},                {name: 'lastpost', mapping: 'lastpost', type: 'date', dateFormat: 'timestamp'},                'lastposter', 'excerpt'            ],            // load using script tags for cross domain, if the data in on the same domain as            // this page, an HttpProxy would be better            proxy: new Ext.data.ScriptTagProxy({                url: 'http://extjs.com/forum/topics-browse-remote.php'                            })        });        store.setDefaultSort('lastpost', 'desc');        // pluggable renders        function renderTopic(value, p, record){            return String.format(                    '<b><a href="http://extjs.com/forum/showthread.php?t={2}" target="_blank">{0}</a></b><a href="http://extjs.com/forum/forumdisplay.php?f={3}" target="_blank">{1} Forum</a>',                    value, record.data.forumtitle, record.id, record.data.forumid);        }        function renderLast(value, p, r){            return String.format('{0}<br/>by {1}', value.dateFormat('M j, Y, g:i a'), r.data['lastposter']);        }        var grid = new Ext.grid.GridPanel({            width:1000,            height:400,            store: store,            trackMouseOver:false,            disableSelection:true,            loadMask: true,                        // grid columns            columns:[{                id: 'topic', // id assigned so we can apply custom css (e.g. .x-grid-col-topic b { color:#333 })                header: "Topic",                dataIndex: 'title',                width: 420,                renderer: renderTopic,                sortable: true            },{                header: "Author",                dataIndex: 'author',                width: 100,                hidden: true,                sortable: true            },{                header: "Replies",                dataIndex: 'replycount',                width: 70,                align: 'right',                sortable: true            },{                id: 'last',                header: "Last Post",                dataIndex: 'lastpost',                width: 150,                renderer: renderLast,                sortable: true            }],            // customize view config            viewConfig: {                forceFit:true,                enableRowBody:true,                showPreview:true,                getRowClass : function(record, rowIndex, p, store){                    if(this.showPreview){                        p.body = '<p>'+record.data.excerpt+'</p>';                        return 'x-grid3-row-expanded';                    }                    return 'x-grid3-row-collapsed';                }            },            // paging bar on the bottom            bbar: new Ext.PagingToolbar({                pageSize: 25,                store: store,                displayInfo: true,                displayMsg: 'Displaying topics {0} - {1} of {2}',                emptyMsg: "No topics to display",                items:[                    '-', {                    pressed: true,                    enableToggle:true,                    text: 'Show Preview',                    cls: 'x-btn-text-icon details',                    toggleHandler: function(btn, pressed){                        var view = grid.getView();                        view.showPreview = pressed;                        view.refresh();                    }                }]            })        });        // render it        grid.render('grid');        // trigger the data store load        store.load({params:{start:0, limit:25}});       